#parse("macros.vm") ##
#set($cName = $cls.getJavaClassName())
#set($cFName = $cls.getJavaClassFullName())
#set($iName = $cls.getJavaInterfaceName())
#set($iFName = $cls.getJavaInterfaceFullName())
##
package $cls.getJavaPackageName();

import java.util.List;
import java.util.Iterator;
import de.incunabulum.owl4java.utils.SimpleUrl;

import com.hp.hpl.jena.ontology.OntModel;
import com.hp.hpl.jena.ontology.impl.IndividualImpl;
import com.hp.hpl.jena.enhanced.EnhGraph;
import com.hp.hpl.jena.graph.Node;

// import interface
import $iFName;

## for all domain properties import all range interfaces
// import interfaces for properties
#foreach($p in $cls.getDomainProperties(true))
#foreach($c in $p.getObjectRange())
import $c.getJavaInterfaceFullName();
#end
#end

/*
 * Class $cls.getMapUri()
 */
public class $cName extends IndividualImpl implements $iName {

    private OntModel model;

#parse("clsVocab.vm")

    /**
     * Generic functions from parent class
     */
    public $cName(Node n, EnhGraph g) {
        super(n, g);
    }

    public Iterator listTypes() {
        return null;
    }

    /**
     * Functions for instance handling
     */
    public $cName get$cName(String uri) {
        return null;
    }

    public List<$cName> getAll$cName() {
        return null;
    }

    public List<$cName> getAll$cName(boolean recursive) {
        return null;
    }

    public boolean has$cName(String uri) {
        return false;
    }

    public $cName create$cName(OntModel model, String localName) {
        return null;
    }

    public $cName create$cName(OntModel model) {
        return null;
    }

#foreach($p in $cls.getDomainProperties(true))
#parse("clsProperty.vm")
#end
}