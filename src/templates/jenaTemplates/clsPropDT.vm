## loop over all presentations and create functions
#foreach ($rep in $cls.listAggregatedPropertyRepresentations($prop))
	#set($range = $rep.getRangeJava())
	#set($rangeFull = $rep.getRangeJavaFull())
	#set($suffix = $rep.getJavaMethodSuffix())
	#set($multipleDeprecated = $rep.getMultipleDeprecated())
	#set($singleDeprecated = $rep.getSingleDeprecated())
	
	
	#if($rep.isMultipleEnabled())
		$multipleDeprecated
		public int count$propnameCaps$suffix() {
			int count = 0;
			Iterator<$rangeFull> it = iterate${propnameCaps}${suffix}();
			while (it.hasNext()) {
				it.next();
				count++;
			}
			return count;
		}
		
		$multipleDeprecated
	    @SuppressWarnings("unchecked")
		public Iterator<$rangeFull> iterate${propnameCaps}${suffix}() {
            ExtendedIterator it = listProperties(${pkgBase}.${pkgTools}.${vocabName}.${propname});
            return it.mapWith(de.incunabulum.owl2java.model.xsd.XsdUtils.objectAs${range}Mapper).filterDrop(nullFilter);		
   		}
   		
 		$multipleDeprecated
		public List<$rangeFull> list${propnameCaps}${suffix}() {
			List<$rangeFull> list = new ArrayList<$rangeFull>();
			Iterator<$rangeFull> it = iterate${propnameCaps}${suffix}();
			while (it.hasNext()) {
				$rangeFull inst = it.next();
				list.add(inst);
			}
			return list;
		}
  
		
		$multipleDeprecated
		public void add$propnameCaps${suffix}($rangeFull #mixedlowercase($range)Value) {
            Literal literal = de.incunabulum.owl2java.model.xsd.XsdUtils.createTypedLiteral((OntModel)getModel(), #mixedlowercase($range)Value, "$rangeURI");
            setPropertyValue(${pkgBase}.${pkgTools}.${vocabName}.${propname}, literal);
		}
		
		$multipleDeprecated
		public void addAll$propnameCaps${suffix}(List<$rangeFull> #mixedlowercase($range)List) {
            for ($rangeFull o : #mixedlowercase($range)List)
                add$propnameCaps${suffix}(o);
		}
		
		$multipleDeprecated
		public void remove$propnameCaps${suffix}($rangeFull #mixedlowercase($range)Value) {
            Literal literal = de.incunabulum.owl2java.model.xsd.XsdUtils.createTypedLiteral((OntModel)getModel(), #mixedlowercase($range)Value, "$rangeURI");
            removeProperty(${pkgBase}.${pkgTools}.${vocabName}.${propname}, literal);
		}
		
		$multipleDeprecated
		public void removeAll$propnameCaps${suffix}() {
            removeAll(${pkgBase}.${pkgTools}.${vocabName}.${propname});
		
		}
	#end
	
	#if($rep.isSingleEnabled())
		$singleDeprecated
		public $rangeFull get$propnameCaps${suffix} () {
            RDFNode n = getPropertyValue(${pkgBase}.${pkgTools}.${vocabName}.${propname});
            if (n instanceof Literal) {
                Literal l = (Literal) n;
                return ($rangeFull) (${rangeMethod}(l));
            } else {
                log.warn("Could not convert property $p.getMapUri() to type $rangeFull");
                return null;
            }
		}
		
		$singleDeprecated
		public void set$propnameCaps${suffix}($rangeFull #mixedlowercase($range)Value) {
            removeAll(${pkgBase}.${pkgTools}.${vocabName}.${propname});
	        de.incunabulum.owl2java.model.xsd.XsdUtils.createTypedLiteral((OntModel)getModel(), #mixedlowercase($range)Value, "$rangeURI");    
            Literal literal = de.incunabulum.owl2java.model.xsd.XsdUtils.createTypedLiteral((OntModel)getModel(), #mixedlowercase($range)Value, "$rangeURI");
            setPropertyValue(${pkgBase}.${pkgTools}.${vocabName}.${propname}, literal);
		}
		
		$singleDeprecated
		public void remove$propnameCaps${suffix}() {
            removeAll(${pkgBase}.${pkgTools}.${vocabName}.${propname});		
		}						
	#end
#end